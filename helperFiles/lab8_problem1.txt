
CS 293
Data Structures and Algorithms Lab
Lab 8 Problem 1A and 1B
----------------------------------

Getting your job done with priority queues!

Part A : (2 pts)

Aim : 

To give some hands on experience on using C++ STL class priority_queue !!

The first line gives you a value n and the second line contains a list of n numbers
which are to be inserted into the priority queue.
The third line contains a number k. You need to remove the minimum element, print its value to
output, double its value and reinsert it. You need to repeat this operation k times !! 
(Let's call this operation our get-minimum operation) 

Implement the code in file name: practice.cpp

Input format :

5          // the first line has number of values
1 2 3 4 5  // the values to be inserted in the priority queue
5          // number of get-minimum operations. 
           // for each get-minimum operation, display the minimum value, pop 
           // it out, double it and reinsert in the priority queue.

Output format: // values obtained by get-minimum operations on separate lines

1
2
2
3
4

You need to push values in a priority queue implementing a min-heap, remove minimum value
double the value and re-insert in queue k times.

Check testcases in the 1A directory.

Part B : (8 pts)

Solve and implement the laundro-matt problem (described below). 
You MUST use priority-queue(s) for this as well.

Implement the code in a file named laundry.cpp

Input and output formats mentioned below.

Credits: This lab is borrowed from a problem statement which
was part of Facebook Hacker Cup 2016 Round 1.

Link: https://www.facebook.com/hackercup/problem/1611251319125133/


Laundro, Matt
-------------

Matt Laundro is about to engage in his favourite activity — doing laundry! 
He has brought 'L' indistinguishable loads of laundry to his local laundromat/washer-dryer, which has 'N' washing machines and 'M' dryers. 
The ith washing machine takes 'Wi' minutes to wash one load of laundry, 
and each dryer takes 'D' minutes to dry a load of laundry. At any point in time, each machine may only be processing at most one load of laundry.

As one might expect, Matt wants to wash and then dry each of his 'L' loads of laundry. Each load of laundry will go through the following steps in order:

1. A non-negative amount of time after Matt arrives at the laundromat, Matt places 
a load in an unoccupied washing machine i 
2. Wi minutes later, he removes the load from the washing machine, placing it 
in a temporary holding basket (which has unlimited space)
3. A non-negative amount of time later, he places the load in an unoccupied dryer
4. D minutes later, he removes the load from the dryer

Note that Matt can instantaneously add laundry to or remove laundry from a machine. 
He can also instantly load or remove laundry from multiple machines.

Note:

- Matt has L loads of laundry on each visit to the laundromat.
- Based on Matt's procedure for washing+drying some machines (washers/dryers)
can be idle.

Objective:
----------

Help Matt minimize the amount of time (in minutes after he arrives at the laundromat) 
after which he can be done drying all L loads of laundry!

Input:
------

Input begins with an integer T, the number of times Matt goes to the laundromat, 
essentially the number of test cases in an input file.

For each trip to the laundromat, there is first a line containing the space-separated 
integers L, N, M, and D in that order. After that is a line containing N space-separated 
integers, the ith of which is Wi.

Output:
-------
For the ith trip, print a line containing the minimum time it will take Matt 
to finish his laundry for that trip.

Constraints

1 ≤ T ≤ 50 
1 ≤ L ≤ 1,000,000 
1 ≤ N ≤ 100,000 
1 ≤ M ≤ 1,000,000,000 
0 ≤ D ≤ 1,000,000,000 
1 ≤ Wi ≤ 1,000,000,000 

Sample input:
-------------

5
1 1 1 34
1200
2 3 2 10
100 10 1
3 3 3 3
1 2 3
4 2 2 7
5 8
999 1 999 6
3

Sample output:
--------------

1234
12
5
22
3003

Explanation of sample example:

In the first case, Matt has just one load of laundry. He washes it for 1200 minutes and 
dries it for 34 minutes. 
In the second case, Matt uses the 1-minute washer for both loads of laundry. The second 
load finishes at the 2-minute mark, so it finishes drying at the 12-minute mark.

Check testcases in the 1B directory.

You are required to submit the following two files as ONE tar.gz file:
  rollno_lab8.tar.gz
      |
      |__practice.cpp
      |__laundry.cpp